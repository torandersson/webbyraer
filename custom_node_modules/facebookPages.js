var http = require('http');
var cache = require('memory-cache');

var databaseUrl = "mongodb://webbyraer:givemethemilk@linus.mongohq.com:10083/webbyraer"; // "username:password@example.com/mydb"
var collections = ["facebook_pages", "twitter_accounts"]
var db = require("mongojs").connect(databaseUrl, collections);

var facebook_projections = {
	name: 1,
	id : 1,
	likes : 1,
	checkins : 1,
	were_here_count : 1,
	talking_about_count : 1,
	about: 1,
	location:1,
	collected_at:1,
	website:1,
	link:1
};

var getByIds = function(id,date,callback) {
	 var dates = []
    ,  ids = [];
  
  if(!Array.isArray(date)) 
  	dates.push(date);
  else
  	dates = date;

  if(!Array.isArray(id)) 
  	ids.push(id);
  else
  	ids = id;

	var obj = cache.get("getByIds_"+ids+"_"+dates);

	if(obj) {
		return process.nextTick(function () {
      console.log("pages-cache");
      return callback(null, obj);
    });
	}
	
	db.facebook_pages.find({"collected_at": {$in: dates}, "id": { $in: ids }},facebook_projections, function(err, pages) {
	  	if( err || !pages || pages.length == 0){
	  		return callback(err,pages);
	  	}
	  	cache.put("getByIds_"+ids.join()+"_"+dates.join(),pages,60000);
	  	console.log("pages-db");
	  	return callback(null,pages);
	});	
};


var handleUndefinedValues = function(page){
	var undefinedDefaults = {
		"checkins" : 0,
		"phone" : "Har inte fyllt i telefonnummer."
	};
	
	for(var propertyName in undefinedDefaults){
		if(page[propertyName] == undefined)
			page[propertyName] = undefinedDefaults[propertyName];
	}

    return page;
}

exports.getByIds = getByIds;
